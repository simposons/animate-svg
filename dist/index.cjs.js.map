{"version":3,"file":"index.cjs.js","sources":["../src/index.ts"],"sourcesContent":["interface Option {\r\n  readonly file: string\r\n  readonly animation: string\r\n  readonly duration: string | number\r\n}\r\ninterface pathType {\r\n  readonly element: SVGPathElement\r\n  readonly length: string\r\n}\r\n// type elementType = 'line' | 'ellipse' | 'circle' | 'polygon' | 'polyline' | 'rect'\r\nconst elementTypeList: string[] = ['line', 'ellipse', 'circle', 'polygon', 'polyline', 'rect']\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class AnimateSvg\r\n */\r\nexport default class AnimateSvg {\r\n  protected key: string = ''\r\n  protected svgKey: string = ''\r\n  protected options: Option = {\r\n    file: '',\r\n    animation: '',\r\n    duration: 200\r\n  }\r\n\r\n  protected divElement: Element | null | undefined = null\r\n  protected svgElement: SVGElement | null | undefined = null\r\n  protected elementList: NodeListOf<SVGPathElement> | null | undefined = null\r\n  protected elementLengthList: pathType[] = []\r\n\r\n  public constructor (key: string, options: object) {\r\n    this.key = key\r\n    this.svgKey = `${key.slice(1)}-svg`\r\n    this.options = {\r\n      ...this.options,\r\n      ...options\r\n    }\r\n    if (this.key === '') {\r\n      console.error('无法获取key,请传入')\r\n      return\r\n    }\r\n    void this.init()\r\n  }\r\n\r\n  /**\r\n     *初始化方法\r\n     * @protected\r\n     * @return {*}  {Promise<void>}\r\n     * @memberof AnimateSvg\r\n     */\r\n  protected async init (): Promise<void> {\r\n    await this.initSvg()\r\n    await this.getPath()\r\n    await this.setAnimate()\r\n  }\r\n\r\n  /**\r\n     *初始化 element节点 加载svg\r\n     * @protected\r\n     * @return {*}  {Promise<void>}\r\n     * @memberof AnimateSvg\r\n     */\r\n  protected async initSvg (): Promise<void> {\r\n    await new Promise((resolve, reject) => {\r\n      this.divElement = document.querySelector(this.key)\r\n      if (this.divElement == null) {\r\n        console.error('请传入正确的key，以获取正确的document')\r\n        return\r\n      }\r\n      const Req = new window.XMLHttpRequest()\r\n      Req.addEventListener('load', (e: any) => {\r\n        const element = this.divElement as HTMLElement\r\n        element.innerHTML = e.currentTarget.responseText\r\n        this.svgElement = element.querySelector('svg') as SVGElement\r\n        this.svgElement.setAttribute('id', this.svgKey)\r\n        resolve(0)\r\n      })\r\n      Req.open('GET', this.options.file)\r\n      Req.send()\r\n    })\r\n  }\r\n\r\n  /**\r\n     *  获取svg中path节点和path长度\r\n     * @protected\r\n     * @return {*}  {Promise<void>}\r\n     * @memberof AnimateSvg\r\n     */\r\n  protected async getPath (): Promise<void> {\r\n    await new Promise((resolve, reject) => {\r\n      this.elementList = this.svgElement?.querySelectorAll('path')\r\n      const elementList = Array.from(this.elementList as NodeListOf<SVGPathElement>)\r\n      console.log({ elementList })\r\n      elementList.forEach(item => {\r\n        item.setAttribute('data-length', item.getTotalLength().toString())\r\n        const obj: pathType = {\r\n          length: item.getTotalLength().toString(),\r\n          element: item\r\n        }\r\n        this.elementLengthList.push(obj)\r\n        resolve(0)\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n     * 设置path动画\r\n     * @protected\r\n     * @memberof AnimateSvg\r\n     */\r\n  protected async setAnimate (): Promise<void> {\r\n    const keyframes = '@keyframes offset {to { stroke-dashoffset: 0;}}'\r\n    // 创建style标签\r\n    const style: HTMLStyleElement = document.createElement('style')\r\n    // 将 keyframes样式写入style内\r\n    style.innerHTML = keyframes\r\n    // 将style样式存放到box标签\r\n    document.getElementsByTagName('head')[0].appendChild(style)\r\n\r\n    await new Promise((resolve, reject) => {\r\n      this.elementLengthList.forEach(item => {\r\n        const { element, length } = item\r\n        console.log({ element }, { length })\r\n        element.style.strokeDasharray = length + ' ' + length\r\n        element.style.strokeDashoffset = length\r\n        element.style.animation = 'offset 1.5s linear 1 forwards'\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n     *外放方法 获取path对象及长度\r\n     * @return {*}  {Array<pathType>}\r\n     * @memberof AnimateSvg\r\n     */\r\n  public getelementList (): pathType[] {\r\n    console.log('elementLengthList', this.elementLengthList)\r\n    return this.elementLengthList\r\n  }\r\n}\r\n"],"names":["AnimateSvg","key","options","this","svgKey","file","animation","duration","divElement","svgElement","elementList","elementLengthList","concat","slice","__assign","init","console","error","prototype","initSvg","_a","sent","getPath","setAnimate","Promise","resolve","reject","_this","document","querySelector","Req","window","XMLHttpRequest","addEventListener","e","element","innerHTML","currentTarget","responseText","setAttribute","open","send","querySelectorAll","Array","from","log","forEach","item","getTotalLength","toString","obj","length","push","style","createElement","getElementsByTagName","appendChild","strokeDasharray","strokeDashoffset","getelementList"],"mappings":";;;;;;;;;;;;;;+mDAiBA,IAAAA,EAAA,WAcE,SAAoBA,EAAAC,EAAaC,GAbvBC,KAAGF,IAAW,GACdE,KAAMC,OAAW,GACjBD,KAAAD,QAAkB,CAC1BG,KAAM,GACNC,UAAW,GACXC,SAAU,KAGFJ,KAAUK,WAA+B,KACzCL,KAAUM,WAAkC,KAC5CN,KAAWO,YAAkD,KAC7DP,KAAiBQ,kBAAe,GAGxCR,KAAKF,IAAMA,EACXE,KAAKC,OAAS,GAAGQ,OAAAX,EAAIY,MAAM,GAAE,QAC7BV,KAAKD,QACAY,EAAAA,EAAA,CAAA,EAAAX,KAAKD,SACLA,GAEY,KAAbC,KAAKF,IAIJE,KAAKY,OAHRC,QAAQC,MAAM,cAIjB,CAiGH,OAzFkBjB,EAAAkB,UAAAH,KAAhB,8FACE,KAAA,EAAA,MAAA,CAAA,EAAMZ,KAAKgB,kBACX,OADAC,EAAAC,OACA,CAAA,EAAMlB,KAAKmB,kBACX,OADAF,EAAAC,OACA,CAAA,EAAMlB,KAAKoB,4BAAXH,EAAAC,iBACD,EAQerB,EAAAkB,UAAAC,QAAhB,yGACE,KAAA,EAAA,MAAA,CAAA,EAAM,IAAIK,SAAQ,SAACC,EAASC,GAE1B,GADAC,EAAKnB,WAAaoB,SAASC,cAAcF,EAAK1B,KACvB,MAAnB0B,EAAKnB,WAAT,CAIA,IAAMsB,EAAM,IAAIC,OAAOC,eACvBF,EAAIG,iBAAiB,QAAQ,SAACC,GAC5B,IAAMC,EAAUR,EAAKnB,WACrB2B,EAAQC,UAAYF,EAAEG,cAAcC,aACpCX,EAAKlB,WAAa0B,EAAQN,cAAc,OACxCF,EAAKlB,WAAW8B,aAAa,KAAMZ,EAAKvB,QACxCqB,EAAQ,EACV,IACAK,EAAIU,KAAK,MAAOb,EAAKzB,QAAQG,MAC7ByB,EAAIW,MAVH,MAFCzB,QAAQC,MAAM,2BAajB,mBAhBDG,EAAAC,iBAiBD,EAQerB,EAAAkB,UAAAI,QAAhB,yGACE,KAAA,EAAA,MAAA,CAAA,EAAM,IAAIE,SAAQ,SAACC,EAASC,SAC1BC,EAAKjB,YAA6B,QAAfU,EAAAO,EAAKlB,kBAAU,IAAAW,OAAA,EAAAA,EAAEsB,iBAAiB,QACrD,IAAMhC,EAAciC,MAAMC,KAAKjB,EAAKjB,aACpCM,QAAQ6B,IAAI,CAAEnC,YAAWA,IACzBA,EAAYoC,SAAQ,SAAAC,GAClBA,EAAKR,aAAa,cAAeQ,EAAKC,iBAAiBC,YACvD,IAAMC,EAAgB,CACpBC,OAAQJ,EAAKC,iBAAiBC,WAC9Bd,QAASY,GAEXpB,EAAKhB,kBAAkByC,KAAKF,GAC5BzB,EAAQ,EACV,GACD,mBAbDL,EAAAC,iBAcD,EAOerB,EAAAkB,UAAAK,WAAhB,kHASE,MARkB,mDAEZ8B,EAA0BzB,SAAS0B,cAAc,UAEjDlB,UAJY,kDAMlBR,SAAS2B,qBAAqB,QAAQ,GAAGC,YAAYH,GAErD,CAAA,EAAM,IAAI7B,SAAQ,SAACC,EAASC,GAC1BC,EAAKhB,kBAAkBmC,SAAQ,SAAAC,GACrB,IAAAZ,EAAoBY,EAAIZ,QAAfgB,EAAWJ,EAAII,OAChCnC,QAAQ6B,IAAI,CAAEV,QAAOA,GAAI,CAAEgB,OAAMA,IACjChB,EAAQkB,MAAMI,gBAAkBN,EAAS,IAAMA,EAC/ChB,EAAQkB,MAAMK,iBAAmBP,EACjChB,EAAQkB,MAAM/C,UAAY,+BAC5B,GACD,mBARDc,EAAAC,iBASD,EAOMrB,EAAAkB,UAAAyC,eAAP,WAEE,OADA3C,QAAQ6B,IAAI,oBAAqB1C,KAAKQ,mBAC/BR,KAAKQ,mBAEfX,CAAD"}